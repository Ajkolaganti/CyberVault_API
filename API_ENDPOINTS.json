{
  "BASE_URL": "/api/v1",
  "auth": {
    "register": "POST /api/v1/auth/register",
    "login": "POST /api/v1/auth/login"
  },
  "accounts": {
    "create": "POST /api/v1/accounts",
    "list": "GET /api/v1/accounts",
    "get": "GET /api/v1/accounts/:id",
    "update": "PUT /api/v1/accounts/:id",
    "delete": "DELETE /api/v1/accounts/:id",
    "rotate": "POST /api/v1/accounts/:id/rotate",
    "history": "GET /api/v1/accounts/:id/history",
    "createBody": {
      "system_type": "string (required) - Type of system (Windows, Linux, Database, Cloud, Network, Application, Security, Directory, Website, Operating System, Certificates, Misc, Oracle DB, AWS, Azure)",
      "hostname_ip": "string (required) - Hostname or IP address",
      "port": "integer (optional) - Port number (e.g., 22 for SSH, 3389 for RDP, 1433 for SQL)",
      "username": "string (required) - Account username",
      "password": "string (required) - Account password/secret",
      "connection_method": "string (optional) - Connection method (RDP, SSH, SQL, HTTPS, HTTP, SFTP, Telnet, VNC, PowerShell, WinRM, Custom)",
      "platform_id": "string (optional) - CyberArk platform policy (e.g., WinDomain, UnixSSH, Oracle)",
      "account_type": "string (optional) - Account type (Local, Domain, Service, Application, Database, System, Shared, Emergency)",
      "safe_id": "string (optional) - UUID of safe where account is stored",
      "rotation_policy": "object (optional) - JSON configuration for rotation policy",
      "account_description": "string (optional) - Description of the account",
      "tags": "array (optional) - Tags associated with the account"
    },
    "updateBody": {
      "system_type": "string (optional) - Type of system",
      "hostname_ip": "string (optional) - Hostname or IP address",
      "port": "integer (optional) - Port number",
      "username": "string (optional) - Account username",
      "password": "string (optional) - Account password/secret",
      "connection_method": "string (optional) - Connection method",
      "platform_id": "string (optional) - Platform policy identifier",
      "account_type": "string (optional) - Account type",
      "safe_id": "string (optional) - Safe UUID",
      "rotation_policy": "object (optional) - JSON configuration for rotation policy",
      "account_description": "string (optional) - Description of the account",
      "tags": "array (optional) - Tags for classification",
      "status": "string (optional) - Status (active, inactive, expired, rotation_required)"
    },
    "rotateBody": {
      "rotationType": "string (optional) - Rotation type (manual, automatic)"
    },
    "responseFields": {
      "owner_email": "string - Email of the account owner",
      "rotation_status": "string - Indication of password rotation status",
      "decrypted_password": "string - Decrypted password (only in responses)",
      "port": "integer - Port number for connection",
      "connection_method": "string - Method to connect to system",
      "platform_id": "string - Platform policy identifier",
      "account_type": "string - Type of account",
      "safe_id": "string - UUID of associated safe"
    }
  },
  "safes": {
    "create": "POST /api/v1/safes",
    "list": "GET /api/v1/safes",
    "get": "GET /api/v1/safes/:id",
    "update": "PUT /api/v1/safes/:id",
    "delete": "DELETE /api/v1/safes/:id",
    "statistics": "GET /api/v1/safes/statistics",
    "grantPermission": "POST /api/v1/safes/:id/permissions",
    "listPermissions": "GET /api/v1/safes/:id/permissions",
    "revokePermission": "DELETE /api/v1/safes/:id/permissions/:permissionId",
    "listActivity": "GET /api/v1/safes/:id/activity",
    "listAccounts": "GET /api/v1/safes/:id/accounts",
    "moveAccounts": "POST /api/v1/safes/move-accounts",
    "createBody": {
      "name": "string (required) - Safe name (3-100 chars)",
      "description": "string (optional) - Safe description (max 500 chars)",
      "safe_type": "string (optional) - Type: standard, shared, department, application",
      "access_level": "string (optional) - Level: private, team, department, public",
      "settings": "object (optional) - JSON configuration for safe settings"
    },
    "updateBody": {
      "name": "string (optional) - Safe name",
      "description": "string (optional) - Safe description",
      "safe_type": "string (optional) - Safe type",
      "access_level": "string (optional) - Access level",
      "status": "string (optional) - Status: active, inactive, archived",
      "settings": "object (optional) - Safe settings"
    },
    "permissionBody": {
      "userId": "string (required) - UUID of user to grant permission",
      "permission_level": "string (required) - Level: read, write, admin, owner"
    },
    "moveAccountsBody": {
      "sourceId": "string (required) - Source safe UUID",
      "targetId": "string (required) - Target safe UUID",
      "accountIds": "array (required) - Array of account UUIDs to move"
    },
    "responseFields": {
      "owner_email": "string - Email of the safe owner",
      "account_count": "number - Number of accounts in the safe",
      "permission_count": "number - Number of users with permissions"
    }
  },
  "credentials": {
    "create": "POST /api/v1/credentials",
    "list": "GET /api/v1/credentials",
    "get": "GET /api/v1/credentials/:id",
    "update": "PUT /api/v1/credentials/:id",
    "delete": "DELETE /api/v1/credentials/:id"
  },
  "jit": {
    "request": "POST /api/v1/jit",
    "list": "GET /api/v1/jit?status={active|history|expired|expiring_soon|all}&limit=50&offset=0",
    "getById": "GET /api/v1/jit/:id",
    "revoke": "POST /api/v1/jit/:id/revoke",
    "extend": "POST /api/v1/jit/:id/extend",
    "statistics": "GET /api/v1/jit/admin/statistics",
    "manualCleanup": "POST /api/v1/jit/admin/cleanup",
    "requestBody": {
      "resource": "string (required) - Resource name",
      "system": "string (optional) - System/Resource being accessed", 
      "reason": "string (required) - Business reason for access",
      "durationMinutes": "number (optional) - Duration in minutes (1-480, default 60)"
    },
    "extendBody": {
      "additionalMinutes": "number (required) - Additional minutes to extend (1-480)"
    },
    "listParams": {
      "status": "string (optional) - Filter by status: active, history, expired, expiring_soon, all",
      "limit": "number (optional) - Number of records per page (default 50)",
      "offset": "number (optional) - Number of records to skip (default 0)"
    },
    "responseFields": {
      "computed_status": "string - Real-time computed status (active, expired, expiring_soon)",
      "time_remaining": "number - Milliseconds until expiration",
      "username": "string - Email/username of session owner"
    }
  },
  "discovery": {
    "list": "GET /api/v1/discovery?source={windows|linux|aws|azure}",
    "get": "GET /api/v1/discovery/:id"
  },
  "sessions": {
    "start": "POST /api/v1/sessions",
    "list": "GET /api/v1/sessions",
    "end": "POST /api/v1/sessions/:id/end",
    "addLog": "POST /api/v1/sessions/:id/logs",
    "getLogs": "GET /api/v1/sessions/:id/logs"
  },
  "roles": {
    "list": "GET /api/v1/roles",
    "update": "PATCH /api/v1/roles/:id"
  },
  "policies": {
    "list": "GET /api/v1/policies",
    "create": "POST /api/v1/policies",
    "update": "PUT /api/v1/policies/:id",
    "delete": "DELETE /api/v1/policies/:id"
  },
  "audit": {
    "list": "GET /api/v1/audit"
  },
  "dashboard": {
    "stats": "GET /api/v1/dashboard/stats",
    "alerts": "GET /api/v1/dashboard/alerts"
  },
  "integrations": {
    "list": "GET /api/v1/integrations",
    "create": "POST /api/v1/integrations",
    "update": "PUT /api/v1/integrations/:id",
    "delete": "DELETE /api/v1/integrations/:id"
  }
} 